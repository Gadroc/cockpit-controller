import groovy.xml.NamespaceBuilder

assert project.plugins.findPlugin(JavaPlugin):
        "The Java plugin must be applied before using javafx8.gradle."

assert project.plugins.findPlugin(ApplicationPlugin):
        "The Application plugin must be applied before using javafx8.gradle."

def javaHome = System.properties['java.home']
def libTempDir = "${buildDir}/deployfxlibs"

logger.warn("Project '$project.name' is using fx:jar. " +
        "Disabling startScripts, installApp.")

configurations {
    jfxant
}

dependencies {
    jfxant files("$javaHome" + "/../lib/ant-javafx.jar")
}

task copyLibs(type:Copy) {
    from { configurations.default.collect { it.isDirectory() ? it : it } }
    into libTempDir
    exclude "*jfxrt.jar"
    exclude "*java2html.jar"
}

jar {
    dependsOn('copyLibs')

    actions = []

    def appId = project.name
    def fallbackClassName = 'com.javafx.main.NoJavaFXFallback'

    def antfx = NamespaceBuilder.newInstance(
            ant,
            'javafx:com.sun.javafx.tools.ant')


    ant.taskdef(
            resource: 'com/sun/javafx/tools/ant/antlib.xml',
            uri: 'javafx:com.sun.javafx.tools.ant',
            classpath: configurations.jfxant.asPath)



    doLast {
        antfx.application(
                id: appId,
                name: project.name,
                mainClass: mainClassName,
                fallbackClass: fallbackClassName)

        antfx.jar(destfile: archivePath) {
            application(refid: appId)
            fileset(dir: sourceSets.main.output.classesDir)
            fileset(dir: sourceSets.main.output.resourcesDir)
            antfx.resources() {
                fileset(dir: libTempDir)
            }
        }
    }
}

startScripts {
    enabled = true
}

installApp {
    enabled = false
}